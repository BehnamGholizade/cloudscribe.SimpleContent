!function (e) {
    function t(e) {
        var t = document.implementation, o = t.createHTMLDocument("temp"), i = t.createDocument("http://www.w3.org/1999/xhtml", "html", null), a = i.createElementNS("http://www.w3.org/1999/xhtml", "body")
        return o.body.innerHTML = "<div>" + e + "</div>", i.documentElement.appendChild(a), i.importNode(o.body, !0), a.appendChild(o.body.firstChild), /<body.*?><div>([\s\S]*?)<\/div><\/body>/i.exec(i.documentElement.innerHTML), RegExp.$1
    } var o, i, a, n, r, l, d, c, s, g, u, h, p, m, b, f, v, w, C, k, y, x, T, P, E, S, D, H, I, R
    editContent = function () { l.attr("contentEditable", !0), c.attr("contentEditable", !0), c.css({ minHeight: "100px" }), c.parent().css("display", "block"), s.wysiwyg({ hotKeys: {}, activeToolbarClass: "active" }), s.css({ minHeight: "400px" }), "new" == i && (l.attr("placeholder", "type your title here"), c.attr("placeholder", "type your meta description here"), s.attr("placeholder", "type your main content here")), d.datetimepicker({ debug: !1, widgetPositioning: { horizontal: "left", vertical: "bottom" }, keepOpen: !0, allowInputToggle: !0, locale: I }), w.attr("disabled", !0), C.attr("disabled", !0), y.removeAttr("disabled"), x.removeAttr("disabled"), "new" == i ? e("#liDelete").hide() : e("#liDelete").show(), e("#liSave").show(), e("#liCancel").show(), e("#liPublished").show(), "Page" == r ? e("#liPageOrder").show() : e("#liPageOrder").hide(), e("#liNewItem").hide(), e("#liEdit").hide(), n && showCategoriesForEditing(), toggleSourceView(), e("#tools").fadeIn().css("display", "inline-block") }, cancelEdit = function () { i.length > 0 ? confirm("Do you want to leave this page?") && history.back() : window.location = H }, toggleSourceView = function () {
        e(".source").bind("click", function () {
            var t = e(this)
            "source" === t.attr("data-cmd") ? (t.attr("data-cmd", "design"), t.addClass("active"), s.text(s.html())) : (t.attr("data-cmd", "source"), t.removeClass("active"), s.html(s.text()))
        })
    }, saveContent = function (i) {
        "design" === e(".source").attr("data-cmd") && e(".source").click(), s.cleanHtml()
        var a
        a = t(s.html())
        var n = 0, g = "", u = "", v = !0
        "Page" == r && (n = h.val(), g = p.val(), u = m.val(), v = f.is(":checked")), e.post(S, { id: o, isPublished: b.prop("checked"), title: l.text().trim(), pubDate: d.val(), pageOrder: n, metaDescription: c.text().trim(), content: a, categories: getCategories(), parentSlug: g, viewRoles: u, showHeading: v, __RequestVerificationToken: document.querySelector("input[name=__RequestVerificationToken]").getAttribute("value") }, function (e) { location.href = e }, "text").fail(function (e) { e && 409 === e.status ? showMessage(!1, "The title is already in use") : showMessage(!1, "Something went wrong on the server ") })
    }, deleteContent = function () { confirm("Are you sure you want to delete this " + r + "?") && e.post(D, { id: o, __RequestVerificationToken: document.querySelector("input[name=__RequestVerificationToken]").getAttribute("value") }, function () { location.href = P }).fail(function () { showMessage(!1, "Something went wrong. Please try again") }) }, showMessage = function (e, t) {
        var o = e ? "alert-success" : "alert-error"
        g.addClass(o), g.text(t), g.parent().fadeIn(), setTimeout(function () { g.parent().fadeOut("slow", function () { g.removeClass(o) }) }, 4e3), alert(t)
    }, getCategories = function () {
        var t = ""
        return e("#txtCategories").length > 0 ? t = e("#txtCategories").val() : e("ul.categories li a").each(function (o, i) { t.length > 0 && (t += ","), t += e(i).html() }), t
    }, showCategoriesForEditing = function () {
        var t = !1, o = getCategories()
        e("ul.categories li").each(function (o, i) { t ? e(i).remove() : t = !0 }), e("ul.categories").append("<li><input id='txtCategories' class='form-control' /></li>"), e("#txtCategories").val(o), e("#txtCategories").attr("placeholder", "type comma separated categories here")
    }, showCategoriesForDisplay = function () {
        if (e("#txtCategories").length > 0) {
            var t = e("#txtCategories").val().split(",")
            e("#txtCategories").parent().remove(), e.each(t, function (t, o) { e("ul.categories").append(' <li itemprop="articleSection" title="' + o + '"> <a href="' + E + encodeURIComponent(o.toLowerCase()) + '">' + o + "</a> </li> ") })
        }
    }, setToolbarCookie = function () { e.cookie("editor-toggle", "hide", { path: "/" }) }, clearToolbarCookie = function () { e.removeCookie("editor-toggle", { path: "/" }) }, toolBarCookieExists = function () {
        var t = e.cookie("editor-toggle")
        return t ? !0 : !1
    }, toggleToolbar = function () {
        var e = (v.hasClass("invisible"), v.is(":visible"))
        e ? (v.hide(), T.show(), T.animate({ top: _, right: "0px" }, 500, "swing"), clearToolbarCookie()) : (v.show(), T.hide(), toolBarCookieExists() || setToolbarCookie())
    }, setInitialToggleState = function () { toolBarCookieExists() ? v.show() : (v.hide(), T.animate({ top: _, right: "0px" }, 500, "swing")) }, addToolBarPadding = function () { M = v.height() }, removeToolbarPadding = function () { }, v = e("#editor-toolbar"), r = e("#editor-toolbar").data("content-type"), "Page" == r ? (o = e("article").first().attr("data-id"), l = e("#article-title"), h = e("#txtPageOrder"), p = e("#txtParentPage"), m = e("#txtViewRoles"), f = e("#chkShowHeading")) : (o = e("[itemprop~='blogPost']").attr("data-id"), l = e("[itemprop~='blogPost'] [itemprop~='name']")), c = e("[itemprop~='description']"), s = e("[itemprop~='articleBody']"), g = e("#editor-toolbar .alert"), u = e("#editor-toolbar #txtImage"), d = e("[itemprop~='datePublished']"), w = e("#btnNew"), C = e("#btnEdit"), k = e("#btnDelete").bind("click", deleteContent), y = e("#btnSave").bind("click", saveContent), x = e("#btnCancel").bind("click", cancelEdit), R = e("#clearallformat"), T = e("#editor-outer-toggle"), b = e("#published"), P = e("#editor-toolbar").data("index-path"), E = e("#editor-toolbar").data("category-path"), S = e("#editor-toolbar").data("save-path"), D = e("#editor-toolbar").data("delete-path"), H = e("#editor-toolbar").data("cancel-edit-path"), a = e("#editor-toolbar").data("current-slug"), n = "True" == e("#editor-toolbar").data("supports-categories"), i = e("#editor-toolbar").data("edit-mode"), I = e("#editor-toolbar").data("locale")
    var _ = e(".navbar-fixed-top").first().height(), M = v.height()
    v.height()
    "Post" == r && 0 == a.length && e("#liEdit").hide(), e("#btnHide").click(function (e) { e.preventDefault(), toggleToolbar() }), T.click(function (e) { e.preventDefault(), toggleToolbar() }), R.click(function (e) { e.preventDefault(), s.html(s.text()) }), setInitialToggleState(), e(document).keyup(function (e) { document.activeElement.isContentEditable || (46 === e.keyCode ? deleteContent() : 27 === e.keyCode && cancelEdit()) }), e(".uploadimage").click(function (t) { t.preventDefault(), e("#txtImage").click() }), "new" == i || "edit" == i ? editContent() : "Page" == r && a && C.removeAttr("disabled"), e(".dropdown-menu > input").click(function (e) { e.stopPropagation() })
}(jQuery)
