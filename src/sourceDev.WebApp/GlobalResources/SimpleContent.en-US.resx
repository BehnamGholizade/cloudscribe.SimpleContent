<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A comma separated list of navigation component filter names used to filter the blog out of the menu. Leave this blank so the blog menu item is not filtered from any of the menu views. There are some standard filter names like topnav and breadcrumbs but it is also possible to use custom names with custom views. As soon as you populate this field it becomes filtered to only show the blog menu item in the included views, whereas blank means unfiltered." xml:space="preserve">
    <value>A comma separated list of navigation component filter names used to filter the blog out of the menu. Leave this blank so the blog menu item is not filtered from any of the menu views. There are some standard filter names like topnav and breadcrumbs but it is also possible to use custom names with custom views. As soon as you populate this field it becomes filtered to only show the blog menu item in the included views, whereas blank means unfiltered.</value>
  </data>
  <data name="About me" xml:space="preserve">
    <value>About me</value>
  </data>
  <data name="Add Blog To Menu" xml:space="preserve">
    <value>Add Blog To Menu</value>
  </data>
  <data name="Add CSS Url" xml:space="preserve">
    <value>Add CSS Url</value>
  </data>
  <data name="Add Javascript Url" xml:space="preserve">
    <value>Add Javascript Url</value>
  </data>
  <data name="Add the blog as a top level menu item. There are multiple other ways of adding the blog to the menu. You can make a page that links to /blog or it can be done from the navigation.xml file. If you see it in the menu more than once it means you have multiple ways it is configured to be added." xml:space="preserve">
    <value>Add the blog as a top level menu item. There are multiple other ways of adding the blog to the menu. You can make a page that links to /blog or it can be done from the navigation.xml file. If you see it in the menu more than once it means you have multiple ways it is configured to be added.</value>
  </data>
  <data name="Any" xml:space="preserve">
    <value>Any</value>
  </data>
  <data name="Archives" xml:space="preserve">
    <value>Archives</value>
  </data>
  <data name="Are you sure you want to delete the post {0}? You cannot undo this action." xml:space="preserve">
    <value>Are you sure you want to delete the post {0}? You cannot undo this action.</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Blog Menu Links To Newest Post" xml:space="preserve">
    <value>Blog Menu Links To Newest Post</value>
  </data>
  <data name="Blog Menu Position" xml:space="preserve">
    <value>Blog Menu Position</value>
  </data>
  <data name="Blog Page Menu Text" xml:space="preserve">
    <value>Blog Page Menu Text</value>
  </data>
  <data name="Blog Page Menu Visibility" xml:space="preserve">
    <value>Blog Page Menu Visibility</value>
  </data>
  <data name="Blog Page Title" xml:space="preserve">
    <value>Blog Page Title</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Comma Separated Channel Categories" xml:space="preserve">
    <value>Comma Separated Channel Categories</value>
  </data>
  <data name="Comment Notification Email" xml:space="preserve">
    <value>Comment Notification Email</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Content Index" xml:space="preserve">
    <value>Content Index</value>
  </data>
  <data name="Correlation Key" xml:space="preserve">
    <value>Correlation Key</value>
  </data>
  <data name="Date Format" xml:space="preserve">
    <value>Date Format</value>
  </data>
  <data name="Days To Comment" xml:space="preserve">
    <value>Days To Comment</value>
  </data>
  <data name="Default Page" xml:space="preserve">
    <value>Default Page</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Developer Tools - {0}" xml:space="preserve">
    <value>Developer Tools - {0}</value>
  </data>
  <data name="Development" xml:space="preserve">
    <value>Development</value>
  </data>
  <data name="Disqus Short Name" xml:space="preserve">
    <value>Disqus Short Name</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Edit - {0}" xml:space="preserve">
    <value>Edit - {0}</value>
  </data>
  <data name="Environment" xml:space="preserve">
    <value>Environment</value>
  </data>
  <data name="Feedburner Url" xml:space="preserve">
    <value>Feedburner Url</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="If checked the blog menu item will link to the most recent post instead of the post list." xml:space="preserve">
    <value>If checked the blog menu item will link to the most recent post instead of the post list.</value>
  </data>
  <data name="If checked will show the blog title and description at the top of the post list." xml:space="preserve">
    <value>If checked will show the blog title and description at the top of the post list.</value>
  </data>
  <data name="Image Path" xml:space="preserve">
    <value>Image Path</value>
  </data>
  <data name="Include Date In Post Urls" xml:space="preserve">
    <value>Include Date In Post Urls</value>
  </data>
  <data name="Invalid request" xml:space="preserve">
    <value>Invalid request</value>
  </data>
  <data name="Is Published" xml:space="preserve">
    <value>Is Published</value>
  </data>
  <data name="Language Code" xml:space="preserve">
    <value>Language Code</value>
  </data>
  <data name="Managing Editor Email" xml:space="preserve">
    <value>Managing Editor Email</value>
  </data>
  <data name="Meta Description" xml:space="preserve">
    <value>Meta Description</value>
  </data>
  <data name="Moderate Comments" xml:space="preserve">
    <value>Moderate Comments</value>
  </data>
  <data name="New Page" xml:space="preserve">
    <value>New Page</value>
  </data>
  <data name="New Post" xml:space="preserve">
    <value>New Post</value>
  </data>
  <data name="Next Post" xml:space="preserve">
    <value>Next Post</value>
  </data>
  <data name="Note that since this page has an override url, the menu item will link to the url so the page is used only as a means to add a link in the menu, the content is not used." xml:space="preserve">
    <value>Note that since this page has an override url, the menu item will link to the url so the page is used only as a means to add a link in the menu, the content is not used.</value>
  </data>
  <data name="Number of posts to show per page on the post list." xml:space="preserve">
    <value>Number of posts to show per page on the post list.</value>
  </data>
  <data name="On public pages, meta description is very important to search engines. It should be no longer than 135 – 160 characters long (although Google has recently been testing longer snippets). Any longer and search engines will chop the end off, so make sure any important keywords are nearer the front." xml:space="preserve">
    <value>On public pages, meta description is very important to search engines. It should be no longer than 135 – 160 characters long (although Google has recently been testing longer snippets). Any longer and search engines will chop the end off, so make sure any important keywords are nearer the front.</value>
  </data>
  <data name="Organization" xml:space="preserve">
    <value>Organization</value>
  </data>
  <data name="Page Management" xml:space="preserve">
    <value>Page Management</value>
  </data>
  <data name="Person" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="Please enter a valid e-mail address" xml:space="preserve">
    <value>Please enter a valid e-mail address</value>
  </data>
  <data name="Posted in:" xml:space="preserve">
    <value>Posted in:</value>
  </data>
  <data name="Posts Per Page" xml:space="preserve">
    <value>Posts Per Page</value>
  </data>
  <data name="Previous Post" xml:space="preserve">
    <value>Previous Post</value>
  </data>
  <data name="Production" xml:space="preserve">
    <value>Production</value>
  </data>
  <data name="Provide your Disqus site name aka short name to use Disqus instead of the internal comment system. Highly recommended." xml:space="preserve">
    <value>Provide your Disqus site name aka short name to use Disqus instead of the internal comment system. Highly recommended.</value>
  </data>
  <data name="Publication Date" xml:space="preserve">
    <value>Publication Date</value>
  </data>
  <data name="Publisher" xml:space="preserve">
    <value>Publisher</value>
  </data>
  <data name="Publisher Logo Height" xml:space="preserve">
    <value>Publisher Logo Height</value>
  </data>
  <data name="Publisher Logo Url" xml:space="preserve">
    <value>Publisher Logo Url</value>
  </data>
  <data name="Publisher Logo Width" xml:space="preserve">
    <value>Publisher Logo Width</value>
  </data>
  <data name="Publisher Type" xml:space="preserve">
    <value>Publisher Type</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Script" xml:space="preserve">
    <value>Script</value>
  </data>
  <data name="Show Blog Title and Description" xml:space="preserve">
    <value>Show Blog Title and Description</value>
  </data>
  <data name="Show Recent Posts on Default Page" xml:space="preserve">
    <value>Show Recent Posts on Default Page</value>
  </data>
  <data name="Slug" xml:space="preserve">
    <value>Slug</value>
  </data>
  <data name="slug is already in use." xml:space="preserve">
    <value>slug is already in use.</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="The description also is used as the channel description in the RSS feed." xml:space="preserve">
    <value>The description also is used as the channel description in the RSS feed.</value>
  </data>
  <data name="The page was created successfully." xml:space="preserve">
    <value>The page was created successfully.</value>
  </data>
  <data name="The page was updated successfully." xml:space="preserve">
    <value>The page was updated successfully.</value>
  </data>
  <data name="The position of the blog within the top level menu." xml:space="preserve">
    <value>The position of the blog within the top level menu.</value>
  </data>
  <data name="This is used in meta data, see http://schema.org/logo." xml:space="preserve">
    <value>This is used in meta data, see http://schema.org/logo.</value>
  </data>
  <data name="This is used in meta data, see http://schema.org/publisher." xml:space="preserve">
    <value>This is used in meta data, see http://schema.org/publisher.</value>
  </data>
  <data name="This setting only applies to using the internal comment system, it does not impact Disqus comments." xml:space="preserve">
    <value>This setting only applies to using the internal comment system, it does not impact Disqus comments.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Url" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="Use Meta Description In Feed" xml:space="preserve">
    <value>Use Meta Description In Feed</value>
  </data>
  <data name="Webmaster Email" xml:space="preserve">
    <value>Webmaster Email</value>
  </data>
  <data name="With great power comes great responsibility. This page is intended for use by developers, for adding javscript and css into the page. Use this page only if you understand what you are doing." xml:space="preserve">
    <value>With great power comes great responsibility. This page is intended for use by developers, for adding javscript and css into the page. Use this page only if you understand what you are doing.</value>
  </data>
</root>