@model cloudscribe.SimpleContent.Web.ViewModels.NewPageViewModel
@inject IStringLocalizer<SimpleContent> sr
@inject IPageRoutes  pageRoutes
@{
    ViewData["Title"] = sr["Create a New Page"];
}
<h2>@ViewData["Title"]</h2>
<a class="btn btn-link" asp-route="@pageRoutes.PageEditRouteName" asp-route-parentslug="@Model.ParentSlug" asp-route-type="@Model.ContentType">@sr["New Page with Standard Content Editor"]</a>
@if (Model.CountOfTemplates > 0)
{
    <h3>@sr["Create Page From Template"]</h3>

    <form class="form-inline mb-3" asp-route="@pageRoutes.NewPageRouteName" method="get" data-submit-once="true" asp-antiforgery="false">
        <input type="hidden" asp-for="@Model.ParentSlug" />
        <input name="query" value="@Model.Query" class="form-control mr-1" placeholder="@sr["Search Term"]" />
        <button id="btnSave" type="submit" class="btn btn-primary mr-1" data-disabled-text='@sr["Working..."]' data-enabled-text='@sr["Search Templates"]'>@sr["Search Templates"]</button>
        <a asp-action="NewPage">@sr["Clear/Reset Search"]</a>
    </form>

    <form asp-action="InitTemplatedPage" data-submit-once="true">
        <input type="hidden" asp-for="@Model.ParentSlug" />
        <input type="hidden" asp-for="@Model.PageOrder" />
        <div class="form-inline mt-2 mb-3">
            <label asp-for="PageTitle" class="mr-1">@sr["Page Heading"]</label>
            <input asp-for="PageTitle" class="form-control w-auto" data-toggle="tooltip" title='@sr["This is the heading and title of the page. The url slug will be generated based on the title."]' />
            <span asp-validation-for="PageTitle" class="invalid-feedback"></span>
            <button id="btnSave" name="submit" type="submit" class="btn btn-primary ml-1" data-disabled-text='@sr["Working..."]' data-enabled-text='@sr["Create Page From Template"]'>@sr["Create Page From Template"]</button>
        </div>
        @foreach (var template in Model.Templates.Data)
        {
            <div class="form-check">
                <input class="form-check-input" type="radio" asp-for="SelectedTemplate" value="@template.Key" id="@(template.Key)" />
                <label class="form-check-label" for="@(template.Key)">
                    @template.Title
                </label>
                <p>@template.Description</p>
            </div>
        }
        <span asp-validation-for="SelectedTemplate" class="text-danger"></span>

    </form>
    <div class="mt-2">
        <cs-pager asp-route="@pageRoutes.NewPageRouteName"
                  asp-route-query="@Model.Query"
                  asp-route-pagesize="@Model.Templates.PageSize"
                  cs-paging-pagesize="@Model.Templates.PageSize"
                  cs-paging-pagenumber="@Model.Templates.PageNumber"
                  cs-paging-totalitems="@Model.Templates.TotalItems"
                  cs-pager-ul-class="pagination d-flex flex-wrap"
                  cs-pager-li-current-class="page-item active"
                  cs-pager-li-other-class="page-item"
                  cs-pager-li-non-active-class="page-item disabled"
                  cs-pager-link-current-class="page-link"
                  cs-pager-link-other-class="page-link"
                  cs-first-page-title='@sr["First Page"]'
                  cs-last-page-title='@sr["Last Page"]'
                  cs-previous-page-title='@sr["Previous page"]'
                  cs-next-page-title='@sr["Next page"]'></cs-pager>
    </div>

}
@section Scripts {
    @{ await Html.RenderPartialAsync("_UnobtrusiveValidationScriptsPartial"); }
    <script src="~/cr/js/unobtrusive-validation-bs4.min.js"></script>
    <script src="~/cr/js/jquery.validate.hooks.min.js"></script>
    <script src="~/cr/js/jqueryvaildation.submitonce-unobtrusive.min.js"></script>
}
